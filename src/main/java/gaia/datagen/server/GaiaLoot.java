package gaia.datagen.server;

import gaia.registry.GaiaLootTables;
import gaia.registry.GaiaRegistry;
import gaia.registry.GaiaTags;
import net.minecraft.advancements.critereon.EntityEquipmentPredicate;
import net.minecraft.advancements.critereon.EntityPredicate;
import net.minecraft.advancements.critereon.ItemPredicate;
import net.minecraft.core.HolderLookup;
import net.minecraft.core.WritableRegistry;
import net.minecraft.data.PackOutput;
import net.minecraft.data.loot.BlockLootSubProvider;
import net.minecraft.data.loot.EntityLootSubProvider;
import net.minecraft.data.loot.LootTableProvider;
import net.minecraft.data.loot.LootTableSubProvider;
import net.minecraft.resources.ResourceKey;
import net.minecraft.tags.ItemTags;
import net.minecraft.util.ProblemReporter;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.flag.FeatureFlags;
import net.minecraft.world.item.Items;
import net.minecraft.world.item.alchemy.Potions;
import net.minecraft.world.item.enchantment.Enchantments;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.storage.loot.BuiltInLootTables;
import net.minecraft.world.level.storage.loot.LootContext;
import net.minecraft.world.level.storage.loot.LootPool;
import net.minecraft.world.level.storage.loot.LootTable;
import net.minecraft.world.level.storage.loot.ValidationContext;
import net.minecraft.world.level.storage.loot.entries.LootItem;
import net.minecraft.world.level.storage.loot.entries.NestedLootTable;
import net.minecraft.world.level.storage.loot.entries.TagEntry;
import net.minecraft.world.level.storage.loot.functions.EnchantWithLevelsFunction;
import net.minecraft.world.level.storage.loot.functions.LootingEnchantFunction;
import net.minecraft.world.level.storage.loot.functions.SetEnchantmentsFunction;
import net.minecraft.world.level.storage.loot.functions.SetItemCountFunction;
import net.minecraft.world.level.storage.loot.functions.SetPotionFunction;
import net.minecraft.world.level.storage.loot.functions.SmeltItemFunction;
import net.minecraft.world.level.storage.loot.parameters.LootContextParamSets;
import net.minecraft.world.level.storage.loot.predicates.LootItemEntityPropertyCondition;
import net.minecraft.world.level.storage.loot.predicates.LootItemRandomChanceWithLootingCondition;
import net.minecraft.world.level.storage.loot.providers.number.ConstantValue;
import net.minecraft.world.level.storage.loot.providers.number.UniformGenerator;
import net.neoforged.neoforge.common.Tags;
import net.neoforged.neoforge.registries.DeferredHolder;

import java.util.List;
import java.util.Set;
import java.util.concurrent.CompletableFuture;
import java.util.function.BiConsumer;
import java.util.stream.Stream;

public class GaiaLoot extends LootTableProvider {
	public GaiaLoot(PackOutput packOutput, CompletableFuture<HolderLookup.Provider> lookupProvider) {
		super(packOutput, Set.of(), List.of(
				new SubProviderEntry(GaiaBlockTables::new, LootContextParamSets.BLOCK),
				new SubProviderEntry(GaiaEntityLoot::new, LootContextParamSets.ENTITY),
				new SubProviderEntry(GaiaBoxLoot::new, LootContextParamSets.GIFT)
		), lookupProvider);
	}

	public static class GaiaBlockTables extends BlockLootSubProvider {

		protected GaiaBlockTables() {
			super(Set.of(), FeatureFlags.REGISTRY.allFlags());
		}

		@Override
		public void generate() {
			this.dropSelf(GaiaRegistry.BUST_GORGON.get());
			this.dropSelf(GaiaRegistry.BUST_SPHINX.get());
			this.dropSelf(GaiaRegistry.BUST_VALKYRIE.get());
			this.dropSelf(GaiaRegistry.BUST_VAMPIRE.get());
			this.dropSelf(GaiaRegistry.BUST_MINOTAUR.get());
			this.dropSelf(GaiaRegistry.DOLL_CREEPER_GIRL.get());
			this.dropSelf(GaiaRegistry.DOLL_ENDER_GIRL.get());
			this.dropSelf(GaiaRegistry.DOLL_SLIME_GIRL.get());
			this.dropSelf(GaiaRegistry.DOLL_MAID.get());
			this.dropSelf(GaiaRegistry.DOLL_DULLAHAN.get());
			this.dropSelf(GaiaRegistry.DOLL_MERMAID.get());
			this.dropSelf(GaiaRegistry.DOLL_NINE_TAILS.get());
			this.dropSelf(GaiaRegistry.DOLL_DRYAD.get());
			this.dropSelf(GaiaRegistry.DECO_GARDEN_GNOME.get());
			this.dropSelf(GaiaRegistry.DECO_MANDRAGORA_POT.get());
			this.dropSelf(GaiaRegistry.DECO_NEST_HARPY.get());
			this.dropSelf(GaiaRegistry.PEARL_BLOCK.get());
		}

		@Override
		protected Iterable<Block> getKnownBlocks() {
			return (Iterable<Block>) GaiaRegistry.BLOCKS.getEntries().stream().map(holder -> (Block) holder.get())::iterator;
		}
	}

	private static class GaiaEntityLoot extends EntityLootSubProvider {
		protected GaiaEntityLoot() {
			super(FeatureFlags.REGISTRY.allFlags());
		}

		@Override
		public void generate() {
			this.add(GaiaRegistry.ANT_HILL.getEntityType(), LootTable.lootTable());
			this.add(GaiaRegistry.ANT_WORKER.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.GREEN_DYE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.HONEYDEW.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 1.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.ANT_SALVAGER.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.MEAT.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.BOOK)
									.apply(new SetEnchantmentsFunction.Builder().withEnchantment(Enchantments.LOOTING, ConstantValue.exactly(1.0F)))
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.ANUBIS.getEntityType(), LootTable.lootTable()
							.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
									.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
											.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
							.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
									.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
									.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
							.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
									.add(LootItem.lootTableItem(GaiaRegistry.BOOK_OF_MEMORY.get())
											.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
//					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
//							.add(LootItem.lootTableItem(GaiaRegistry.SPAWN_WERESHEEP.get())
//							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.ARACHNE.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.STONE_COAL.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_OVERWORLD.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOOK_OF_MEMORY.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.BANSHEE.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.SOULFIRE.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get()))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.WEAPON_BOOK_NIGHTMARE.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.BEE.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.BONE_MEAL)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.HONEYDEW.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 1.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.BEHENDER.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.ENDER_PEARL)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_END.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.WEAPON_BOOK_ENDER.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.BONE_KNIGHT.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.REDSTONE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_OVERWORLD.get()))
							.add(TagEntry.expandTag(Tags.Items.STORAGE_BLOCKS_REDSTONE))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.SKELETON_SKULL)
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.CECAELIA.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.SHINY_PEARL.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.CLAY)
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.25F, 0.01F))
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 1.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_OVERWORLD.get()))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.BOOK)
									.apply(new SetEnchantmentsFunction.Builder().withEnchantment(Enchantments.LUCK_OF_THE_SEA, ConstantValue.exactly(1.0F)))
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.CENTAUR.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.LEATHER)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_ARROWS.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.CHEST.getEntityType(), LootTable.lootTable());
			this.add(GaiaRegistry.CHEST.getEntityType(), GaiaLootTables.CHEST_TABLES, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(NestedLootTable.lootTableReference(BuiltInLootTables.SIMPLE_DUNGEON))
					)
			);
			this.add(GaiaRegistry.COBBLE_GOLEM.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.COBBLESTONE_GOLEM.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.CHEST_JUNGLE.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.TOTEM_FRAGMENT.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.WEAPON_BOOK_METAL.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.CREEP.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.GUNPOWDER)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_OVERWORLD.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.CREEPER_GIRL.getSpawnEgg().get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.DOLL_CREEPER_GIRL.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.CYAN_FLOWER.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.DANDELION)
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.1F, 0.01F)))
							.add(LootItem.lootTableItem(Items.POPPY)))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.MANDRAKE.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.0625F, 0.01F))
									.when(LootItemEntityPropertyCondition.hasProperties(LootContext.EntityTarget.KILLER,
											EntityPredicate.Builder.entity()
													.equipment(EntityEquipmentPredicate.Builder.equipment()
															.mainhand(ItemPredicate.Builder.item().of(GaiaTags.TOOLS_SHOVELS)).build()))
									)
							)
					)
			);
			this.add(GaiaRegistry.CYCLOPS.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.FUR.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.BOOK)
									.apply(new SetEnchantmentsFunction.Builder().withEnchantment(Enchantments.SHARPNESS, ConstantValue.exactly(1.0F)))
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.KNUCKLES.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.DEATHWORD.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.PAPER)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.BOOK)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 1.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_OVERWORLD.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.WEAPON_BOOK.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.DRYAD.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.TAPROOT.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(ItemTags.LOGS_THAT_BURN)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F))))
							.when(LootItemEntityPropertyCondition.hasProperties(LootContext.EntityTarget.KILLER,
									EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
											.mainhand(ItemPredicate.Builder.item().of(GaiaTags.TOOLS_AXES)).build()))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.DOLL_DRYAD.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.DULLAHAN.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.SOULFIRE.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.DOLL_DULLAHAN.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.DWARF.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.MEAT.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
			);
			this.add(GaiaRegistry.DWARF.getEntityType(), GaiaLootTables.DWARF_RANGED, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.ARROW)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_ARROWS.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.DWARF.getEntityType(), GaiaLootTables.DWARF_MINER, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_OVERWORLD.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.1F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
			);
			this.add(GaiaRegistry.ENDER_EYE.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.ENDER_PEARL)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.DOLL_ENDER_GIRL.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.ENDER_DRAGON_GIRL.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.ENDER_PEARL)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_END.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get()))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.DOLL_ENDER_GIRL.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.ENDER_GIRL.getSpawnEgg().get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.ELYTRA_FRAGMENT.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.FLESH_LICH.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.GEMS_LAPIS)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_OVERWORLD.get()))
							.add(TagEntry.expandTag(Tags.Items.STORAGE_BLOCKS_LAPIS))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.ZOMBIE_HEAD)
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.GELATINOUS_SLIME.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.SLIME_BALL)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.SLIME_GIRL.getSpawnEgg().get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.DOLL_SLIME_GIRL.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.GOBLIN.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.MEAT.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_ARROWS.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.GOBLIN_FERAL.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
			);
			this.add(GaiaRegistry.GRYPHON.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.FEATHER)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.HARPY.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.FEATHER)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.DECO_NEST_HARPY.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.HUNTER.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.ROTTEN_HEART.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_ARROWS.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.KOBOLD.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.FUR.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_ARROWS.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.MANDRAGORA.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.TAPROOT.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.MANDRAKE.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F))))
							.when(LootItemEntityPropertyCondition.hasProperties(LootContext.EntityTarget.KILLER,
									EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
											.mainhand(ItemPredicate.Builder.item().of(GaiaTags.TOOLS_SHOVELS)).build()))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F)))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.DECO_GARDEN_GNOME.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.MATANGO.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.MUSHROOMS)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))

			);
			this.add(GaiaRegistry.MERMAID.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.SHINY_PEARL.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 1.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_OVERWORLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_OLD.get())))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.DOLL_MERMAID.get())))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.SEASHELL_HAIRPIN.get())))
			);
			this.add(GaiaRegistry.MINOTAUR.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.GOLDEN_APPLE_PIE_SLICE.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 1.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(GaiaTags.NUGGETS_DIAMOND)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(GaiaTags.NUGGETS_EMERALD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_DIAMOND.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BUST_MINOTAUR_ITEM.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.HEAVY_BARBELL.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.RING_OF_HASTE.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.MINOTAURUS.getEntityType(), LootTable.lootTable()
							.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
									.add(LootItem.lootTableItem(Items.LEATHER)
											.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
											.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
							.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
									.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
											.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
							.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
									.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
									.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
//					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
//							.add(LootItem.lootTableItem(GaiaRegistry.HOLSTAURUS.getSpawnEgg().get())
//									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
							.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F)).when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))
									.add(LootItem.lootTableItem(GaiaRegistry.WEAPON_BOOK_BATTLE.get())))
			);
			this.add(GaiaRegistry.MINOTAURUS.getEntityType(), GaiaLootTables.MINOTAURUS_RANGED, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.ARROW)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F)).when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_ARROWS.get())))
			);
			this.add(GaiaRegistry.MIMIC.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(NestedLootTable.lootTableReference(EntityType.CREEPER.getDefaultLootTable()))
							.add(NestedLootTable.lootTableReference(EntityType.SPIDER.getDefaultLootTable()))
							.add(NestedLootTable.lootTableReference(EntityType.ENDERMAN.getDefaultLootTable()))
							.add(NestedLootTable.lootTableReference(EntityType.SLIME.getDefaultLootTable()))
							.add(NestedLootTable.lootTableReference(EntityType.ZOMBIE.getDefaultLootTable()))
							.add(NestedLootTable.lootTableReference(EntityType.SKELETON.getDefaultLootTable())))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_OVERWORLD.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.PREMIUM_MONSTER_FEED.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.TRADER.getSpawnEgg().get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_RECORD.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.WEAPON_BOOK_HUNGER.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.GRAVEMITE.getEntityType(), LootTable.lootTable());
			this.add(GaiaRegistry.MUMMY.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.BONE))
							.add(LootItem.lootTableItem(Items.ROTTEN_FLESH))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.NAGA.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(NestedLootTable.lootTableReference(BuiltInLootTables.FISHING_FISH)
									.apply(SmeltItemFunction.smelted().when(LootItemEntityPropertyCondition.hasProperties(LootContext.EntityTarget.THIS, ENTITY_ON_FIRE)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
			);
			this.add(GaiaRegistry.NINE_TAILS.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.SOULFIRE.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.FAN_FIRE.get())
									.apply(new SetEnchantmentsFunction.Builder()
											.withEnchantment(Enchantments.FIRE_ASPECT, ConstantValue.exactly(2.0F))
											.withEnchantment(Enchantments.KNOCKBACK, ConstantValue.exactly(1.0F)))
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.DOLL_NINE_TAILS.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.ONI.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.SOULFIRE.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.BOOK)
									.apply(new SetEnchantmentsFunction.Builder().withEnchantment(Enchantments.SHARPNESS, ConstantValue.exactly(1.0F)))
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.ORC.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.MEAT.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
			);
			this.add(GaiaRegistry.SATYRESS.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.MEAT.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.SHAMAN.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.ROTTEN_HEART.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get())))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOOK_OF_MEMORY.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.SHARKO.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.SHINY_PEARL.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.25F, 0.01F))
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 1.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_OVERWORLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get()))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.WEAPON_BOOK_BUFF.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.SIREN.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(NestedLootTable.lootTableReference(BuiltInLootTables.FISHING_FISH)
									.apply(SmeltItemFunction.smelted().when(LootItemEntityPropertyCondition.hasProperties(LootContext.EntityTarget.THIS, ENTITY_ON_FIRE)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_ARROWS.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.SLUDGE_GIRL.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.SLIME_BALL)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.SPHINX.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.GOLDEN_APPLE_PIE_SLICE.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 1.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(GaiaTags.NUGGETS_DIAMOND)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(GaiaTags.NUGGETS_EMERALD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_DIAMOND.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BUST_SPHINX.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.RING_OF_JUMP.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.CHEST_DESERT.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.SPORELING.getEntityType(), LootTable.lootTable());
			this.add(GaiaRegistry.SPRIGGAN.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.TAPROOT.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.OAK_LOG)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F))))
							.when(LootItemEntityPropertyCondition.hasProperties(LootContext.EntityTarget.KILLER,
									EntityPredicate.Builder.entity().equipment(EntityEquipmentPredicate.Builder.equipment()
											.mainhand(ItemPredicate.Builder.item().of(GaiaTags.TOOLS_AXES)).build()))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get()))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.WEAPON_BOOK_NATURE.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.SUCCUBUS.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.FIRESHARD.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.QUARTZ))
							.add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_NETHER.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.TOAD.getEntityType(), LootTable.lootTable()
							.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
									.add(LootItem.lootTableItem(Items.SLIME_BALL)
											.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
											.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
							.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
									.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
											.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
							.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
									.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
											.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
//					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F)) //Poison Trinket Accessory
//							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
//									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.VALKYRIE.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.GOLDEN_APPLE_PIE_SLICE.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 1.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(GaiaTags.NUGGETS_DIAMOND)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(GaiaTags.NUGGETS_EMERALD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_DIAMOND.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BUST_VALKYRIE.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.RING_OF_SPEED.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.WERECAT.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.MEAT.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.WITCH.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.NETHER_WART_JAM.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get()))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOOK_OF_MEMORY.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.DECO_MANDRAGORA_POT.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.WITHER_COW.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.WITHERED_BRAIN.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(Items.QUARTZ))
							.add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_NETHER.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
			);
			this.add(GaiaRegistry.WIZARD_HARPY.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.SOULFIRE.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_IRON)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_IRON.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOOK_OF_MEMORY.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);
			this.add(GaiaRegistry.YUKI_ONNA.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.FUR.get())
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 2.0F)))
									.apply(LootingEnchantFunction.lootingMultiplier(UniformGenerator.between(0.0F, 1.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(TagEntry.expandTag(Tags.Items.NUGGETS_GOLD)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(0.0F, 3.0F)))))
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.025F, 0.01F))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_GOLD.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get()))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.FAN_ICE.get())
									.when(LootItemRandomChanceWithLootingCondition.randomChanceAndLootingBoost(0.01F, 0.01F))))
			);

			this.add(GaiaRegistry.HORSE.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(NestedLootTable.lootTableReference(EntityType.ZOMBIE_HORSE.getDefaultLootTable())))
			);

			//Merchant
			this.add(GaiaRegistry.TRADER.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.TRADER.getSpawnEgg().get()))
					)
			);
			this.add(GaiaRegistry.CREEPER_GIRL.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.CREEPER_GIRL.getSpawnEgg().get()))
					)
			);
			this.add(GaiaRegistry.ENDER_GIRL.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.ENDER_GIRL.getSpawnEgg().get()))
					)
			);
//			this.add(GaiaRegistry.HOLSTAURUS.getEntityType(), LootTable.lootTable()
//					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
//							.add(LootItem.lootTableItem(GaiaRegistry.HOLSTAURUS.getSpawnEgg().get()))
//					)
//			);
			this.add(GaiaRegistry.SLIME_GIRL.getEntityType(), LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.add(LootItem.lootTableItem(GaiaRegistry.SLIME_GIRL.getSpawnEgg().get()))
					)
			);
//			this.add(GaiaRegistry.WERESHEEP.getEntityType(), LootTable.lootTable()
//					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
//							.add(LootItem.lootTableItem(GaiaRegistry.WERESHEEP.getSpawnEgg().get()))
//					)
//			);
		}

		@Override
		protected Stream<EntityType<?>> getKnownEntityTypes() {
			return GaiaRegistry.ENTITIES.getEntries().stream().map(DeferredHolder::value);
		}
	}

	private static class GaiaBoxLoot implements LootTableSubProvider {
		@Override
		public void generate(HolderLookup.Provider provider, BiConsumer<ResourceKey<LootTable>, LootTable.Builder> consumer) {
			consumer.accept(GaiaLootTables.BAG_ARROW, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(Items.TIPPED_ARROW)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 16.0F)))
									.apply(SetPotionFunction.setPotion(Potions.SLOWNESS)).setWeight(10))
							.add(LootItem.lootTableItem(Items.TIPPED_ARROW)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 16.0F)))
									.apply(SetPotionFunction.setPotion(Potions.HARMING)).setWeight(10))
							.add(LootItem.lootTableItem(Items.TIPPED_ARROW)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 16.0F)))
									.apply(SetPotionFunction.setPotion(Potions.POISON)).setWeight(10))
							.add(LootItem.lootTableItem(Items.TIPPED_ARROW)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 16.0F)))
									.apply(SetPotionFunction.setPotion(Potions.WEAKNESS)).setWeight(10))
					)
			);
			consumer.accept(GaiaLootTables.BAG_BOOK, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(Items.BOOK)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(5, 20)).allowTreasure()))
					)
			);
			consumer.accept(GaiaLootTables.BAG_RECORD, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(TagEntry.expandTag(GaiaTags.RECORDS))
					)
			);
			consumer.accept(GaiaLootTables.BOXES_HAT, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(GaiaRegistry.HEADGEAR_BOOK.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.HEADGEAR_MOB.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.HEADGEAR_BOLT.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.HEADGEAR_ARROW.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.HEADGEAR_DOLL.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.HEADGEAR_EARS_ELF.get()))
					)
			);
			consumer.accept(GaiaLootTables.BOXES_OLD, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(GaiaRegistry.BAG_BOOK.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.GIGA_GEAR.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.WEAPON_BOOK_WITHER.get()))
							.add(LootItem.lootTableItem(GaiaRegistry.BOX_EGG.get()))
					)
			);
			consumer.accept(GaiaLootTables.BOXES_IRON, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(Items.IRON_INGOT)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 9.0F))))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(Items.IRON_AXE)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.IRON_PICKAXE)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.IRON_SHOVEL)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.IRON_SHOVEL)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.IRON_HELMET)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.IRON_CHESTPLATE)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.IRON_LEGGINGS)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.IRON_BOOTS)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.IRON_HORSE_ARMOR).setWeight(10))
					)
			);
			consumer.accept(GaiaLootTables.BOXES_GOLD, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(Items.GOLD_INGOT)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 9.0F))))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(Items.GOLDEN_AXE)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.GOLDEN_PICKAXE)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.GOLDEN_SHOVEL)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.GOLDEN_SHOVEL)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.GOLDEN_HELMET)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.GOLDEN_CHESTPLATE)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.GOLDEN_LEGGINGS)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.GOLDEN_BOOTS)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.GOLDEN_HORSE_ARMOR).setWeight(10))
					)
			);
			consumer.accept(GaiaLootTables.BOXES_DIAMOND, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(Items.DIAMOND)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 9.0F))))
					)
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(Items.DIAMOND_AXE)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.DIAMOND_PICKAXE)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.DIAMOND_SHOVEL)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.DIAMOND_SHOVEL)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.DIAMOND_HELMET)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.DIAMOND_CHESTPLATE)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.DIAMOND_LEGGINGS)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.DIAMOND_BOOTS)
									.apply(EnchantWithLevelsFunction.enchantWithLevels(UniformGenerator.between(20, 39)).allowTreasure()).setWeight(10))
							.add(LootItem.lootTableItem(Items.DIAMOND_HORSE_ARMOR).setWeight(10))
					)
			);
			consumer.accept(GaiaLootTables.BOXES_OVERWORLD, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(Items.GOLD_ORE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 4.0F))).setWeight(10))
							.add(LootItem.lootTableItem(Items.IRON_ORE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 4.0F))).setWeight(15))
							.add(LootItem.lootTableItem(Items.COPPER_ORE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 4.0F))).setWeight(15))
							.add(LootItem.lootTableItem(Items.COAL_ORE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(2.0F, 8.0F))).setWeight(15))
							.add(LootItem.lootTableItem(Items.LAPIS_ORE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 4.0F))).setWeight(10))
							.add(LootItem.lootTableItem(Items.DIAMOND_ORE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 2.0F))).setWeight(5))
							.add(LootItem.lootTableItem(Items.REDSTONE_ORE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(2.0F, 8.0F))).setWeight(10))
							.add(LootItem.lootTableItem(Items.EMERALD_ORE).setWeight(5))
					)
			);
			consumer.accept(GaiaLootTables.BOXES_END, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(Items.OBSIDIAN)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(2.0F, 8.0F))).setWeight(15))
							.add(LootItem.lootTableItem(Items.END_STONE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(2.0F, 8.0F))).setWeight(15))
					)
			);
			consumer.accept(GaiaLootTables.BOXES_NETHER, LootTable.lootTable()
					.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
							.name("main")
							.add(LootItem.lootTableItem(Items.GLOWSTONE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 4.0F))).setWeight(10))
							.add(LootItem.lootTableItem(Items.NETHER_QUARTZ_ORE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 8.0F))).setWeight(15))
							.add(LootItem.lootTableItem(Items.NETHER_GOLD_ORE)
									.apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 8.0F))).setWeight(15))
					)
			);
			consumer.accept(GaiaLootTables.BOXES_EGG, LootTable.lootTable()
							.withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1.0F))
											.name("main")
											.add(LootItem.lootTableItem(GaiaRegistry.CREEPER_GIRL.getSpawnEgg().get()))
											.add(LootItem.lootTableItem(GaiaRegistry.ENDER_GIRL.getSpawnEgg().get()))
//							.add(LootItem.lootTableItem(GaiaRegistry.HOLSTAURUS.getSpawnEgg().get()))
											.add(LootItem.lootTableItem(GaiaRegistry.SLIME_GIRL.getSpawnEgg().get()))
											.add(LootItem.lootTableItem(GaiaRegistry.TRADER.getSpawnEgg().get()))
//							.add(LootItem.lootTableItem(GaiaRegistry.WERESHEEP.getSpawnEgg().get()))
							)
			);
		}
	}

	@Override
	protected void validate(WritableRegistry<LootTable> writableregistry, ValidationContext validationcontext, ProblemReporter.Collector problemreporter$collector) {
		//A list of loot tables that don't get validated because they most likely reference other loot tables which would cause it to fail
		List<ResourceKey<LootTable>> ignored = List.of(
				GaiaLootTables.CHEST_TABLES,
				GaiaRegistry.CHEST.getEntityType().getDefaultLootTable(),
				GaiaRegistry.HORSE.getEntityType().getDefaultLootTable(),
				GaiaRegistry.MIMIC.getEntityType().getDefaultLootTable(),
				GaiaRegistry.NAGA.getEntityType().getDefaultLootTable(),
				GaiaRegistry.SIREN.getEntityType().getDefaultLootTable()
		);
		writableregistry.holders().forEach(reference -> {
			if (!ignored.contains(reference.key())) {
				reference.value().validate(validationcontext.setParams(reference.value().getParamSet()).enterElement("{" + reference.key().location() + "}", reference.key()));
			}
		});
	}
}
